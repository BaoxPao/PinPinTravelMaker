<!doctype html>
<html lang="en">

<head>
    <title></title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <link type="text/css" rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" />
    <link type="text/css" rel="stylesheet"
          href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/south-street/jquery-ui.css">
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script type="text/javascript"
            src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link type="text/css" rel="stylesheet" href="style.css" />

</head>

<body class="p-4">
    <div class="row" id="chatRoom">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="d-flex justify-content-between">
                        <label>聊天室</label>
                        <!-- 暱稱先忽略 -->
                        <!-- <label>暱稱: <span id="userName"></span></label> -->
                    </div>
                </div>
                <div class="card-body">
                    <div class="mb-3" id="room"></div>
                    <div class="input-group">
                        <input id="txtMsg" class="form-control" type="text" value="hello html5 websocket" />
                        <button class="btn btn-secondary" type="button" id="send">
                            <svg xmlns="http://www.w3.org/2000/svg" style="height: 18px;" viewBox="0 0 512 512">
                                <path fill="#fff"
                                      d="M498.1 5.6c10.1 7 15.4 19.1 13.5 31.2l-64 416c-1.5 9.7-7.4 18.2-16 23s-18.9 5.4-28 1.6L284 427.7l-68.5 74.1c-8.9 9.7-22.9 12.9-35.2 8.1S160 493.2 160 480V396.4c0-4 1.5-7.8 4.2-10.7L331.8 202.8c5.8-6.3 5.6-16-.4-22s-15.7-6.4-22-.7L106 360.8 17.7 316.6C7.1 311.3 .3 300.7 0 288.9s5.9-22.8 16.1-28.7l448-256c10.7-6.1 23.9-5.5 34 1.4z" />
                            </svg>
                        </button>
                    </div>
                </div>
                <div class="card-footer"></div>
            </div>
        </div>
    </div>

    <div id="liveToast" class="toast align-items-center text-white bg-danger border-0 bottom-0 start-0" role="alert"
         aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">
                請輸入傳送訊息！
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"
                    aria-label="Close"></button>
        </div>
    </div>


    <script>
        const myFile = document.querySelector("#myFile");
        const form = document.querySelector('.needs-validation');
        const chatRoom = document.querySelector('#chatRoom');
        //const txtUser = document.querySelector('#txtUser');
        const userName = document.querySelector("#userName");
        const txtMsg = document.querySelector('#txtMsg');
        const liveToast = document.querySelector('#liveToast');
        const room = document.querySelector('#room');
        const send = document.querySelector('#send');
        enterRoom();

        function enterRoom() {
            const token = localStorage.getItem('token');
            if (!token) {
                console.error('No token found in localStorage');
                return;
            }

            // Adjust WebSocket URL according to your setup
            //連線WebSocket
            //const socket = new WebSocket(`wss://localhost:7280/api/Chatroom/GetUserConnect?token=${encodeURIComponent(token)}`);
            const socket = new WebSocket(`wss://localhost:7280/api/Chatroom/GetUserConnect`);

            //const socket = new WebSocket("wss://localhost:7188/Ws2/chatRoom");

            //連線建立成功
            socket.onopen = (event) => {

                //userName.textContent = txtUser.value;

                const data = {
                    Type: "newUser",
                    //User: txtUser.value
                }
                // console.log(data);
                // socket.send(JSON.stringify(data));

                console.log('WebSocket connection established');
                socket.send(JSON.stringify({ Type: "authenticate", Token: token }));

            };

            //接收WebSocket傳送過來的資料
            socket.onmessage = (event) => {
                var data = JSON.parse(event.data);
                console.log(data);
                if (data.Type === "newUser") {
                    room.innerHTML += '<div class="alert alert-info my-2 py-2"> 已加入聊天室</div>';
                } else if (data.Type === "message") {
                    showMessage(data);
                }
            };

            //關閉WebSocket連線
            socket.onclose = (event) => {
                alert('關閉連線: ' + event.toString());
                console.log(event);
            };

            //WebSocket連線發生錯誤
            socket.onerror = (error) => {
                alert('連線錯誤: ' + error.toString());
                console.error(error);
            };

            //按下enter送出訊息
            txtMsg.addEventListener("keyup", function (event) {
                if (event.keyCode === 13) {
                    event.preventDefault();
                    sendMessage();
                }
            });

            //按下send送出訊息
            send.addEventListener("click", function (event) {
                sendMessage();
            });

            //傳送訊息
            function sendMessage() {
                if (txtMsg.value === "") {
                    var toast = new bootstrap.Toast(liveToast);
                    toast.show();
                    return;
                }
                const data = {
                    Type: "message",
                    //User: txtUser.value,
                    Message: txtMsg.value
                }
                console.log(data);
                socket.send(JSON.stringify(data));
                txtMsg.value = "";

                const bubble = `
                                        <div class="mine messages">
                                            <div class="message last">${data.Message}</div>
                                        </div>
                                    `;
                room.innerHTML += bubble;
            }

            //顯示訊息
            function showMessage(msg) {
                const bubble = `
                                        <div class="yours messages">
                                            用戶
                                            <div class="message last">${msg.Message}</div>
                                        </div>
                                    `;
                room.innerHTML += bubble;
            }
        }

    </script>

</body>

</html>

